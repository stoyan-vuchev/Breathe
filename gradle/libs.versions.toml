[versions]

# Plugin Versions
agp = "8.6.0"
kotlin = "2.0.10"
ksp = "2.0.10-1.0.24"

# GMS Lib Versions
gmsLocation = "21.3.0"

# Core Lib Versions
coreKtx = "1.13.1"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
lifecycleRuntimeKtx = "2.8.5"
material = "1.12.0"
media3 = "1.4.1"

# Jetpack Compose Lib Versions
composeBom = "2024.09.00"
composeVersion = "1.7.0"
activityCompose = "1.9.2"
navigationCompose = "2.8.0"
lifecycleRuntimeCompose = "2.8.5"
material3Compose = "1.3.0"

# Fancy UI Stuff Lib Versions :d
haze = "0.7.1"
squircleShape = "2.0.0"
systemUiBarsTweaker = "1.1.0"
lottie = "6.4.1"

# Storage Lib Versions
dataStore = "1.1.1"
room = "2.6.1"

# Dependency Injection Lib Versions
daggerHilt = "2.51"
androidxHiltNavigationCompose = "1.2.0"
androidxHiltWork = "1.2.0"
androidxHiltCompiler = "1.2.0"

# Networking Lib Versions
ktor = "2.3.11"

# Serialization Lib Versions
gson = "2.10.1"
kotlinxSerialization = "1.6.3"

# Work Manager Lib Versions
workManager = "2.9.0"

# Testing Lib Versions
assertK = "0.28.1"
appCashTurbine = "1.1.0"
coroutines = "1.8.0"

# =================================================================================================

[libraries]

# GMS Lib Dependencies
gms-location = { group = "com.google.android.gms", name = "play-services-location", version.ref = "gmsLocation" }

# Core Lib Dependencies
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# Media3
media3-exoplayer = { group = "androidx.media3", name = "media3-exoplayer", version.ref = "media3" }
media3-exoplayer-dash = { group = "androidx.media3", name = "media3-exoplayer-dash", version.ref = "media3" }
media3-ui = { group = "androidx.media3", name = "media3-ui", version.ref = "media3" }

# Jetpack Compose Lib Dependencies
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-runtime = { group = "androidx.compose.runtime", name = "runtime", version.ref = "composeVersion" }
compose-foundation = { group = "androidx.compose.foundation", name = "foundation", version.ref = "composeVersion" }
compose-animation = { group = "androidx.compose.animation", name = "animation", version.ref = "composeVersion" }
compose-ui = { group = "androidx.compose.ui", name = "ui", version.ref = "composeVersion" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics", version.ref = "composeVersion" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "composeVersion" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview", version.ref = "composeVersion" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "composeVersion" }
compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4", version.ref = "composeVersion" }
compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3Compose" }
compose-material3-windowSizeClass = { group = "androidx.compose.material3", name = "material3-window-size-class", version.ref = "material3Compose" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }
lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycleRuntimeCompose" }

# Fancy UI Stuff Lib Dependencies :d
chrisbanes-haze = { group = "dev.chrisbanes.haze", name = "haze", version.ref = "haze" }
stoyanvuchev-squircleShape = { group = "io.github.stoyan-vuchev", name = "squircle-shape-android", version.ref = "squircleShape" }
stoyanvuchev-systemUiBarsTweaker = { group = "com.github.stoyan-vuchev", name = "system-ui-bars-tweaker", version.ref = "systemUiBarsTweaker" }
lottie-compose = { group = "com.airbnb.android", name = "lottie-compose", version.ref = "lottie" }

# Coroutines Lib Dependencies
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Storage Lib Dependencies
datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "dataStore" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }

# Dependency Injection Lib Dependencies
dagger-hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "daggerHilt" }
dagger-hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "daggerHilt" }
dagger-hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "daggerHilt" }
androidx-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "androidxHiltNavigationCompose" }
androidx-hilt-work = { group = "androidx.hilt", name = "hilt-work", version.ref = "androidxHiltWork" }
androidx-hilt-compiler = { group = "androidx.hilt", name = "hilt-compiler", version.ref = "androidxHiltCompiler" }

# Networking Lib Dependencies
ktor-client-android = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor" }
ktor-client-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }

# Serialization Lib Dependencies
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

# Work Manager Lib Dependencies
workManager-runtime = { group = "androidx.work", name = "work-runtime", version.ref = "workManager" }
workManager-runtime-ktx = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "workManager" }
workManager-multiprocess = { group = "androidx.work", name = "work-multiprocess", version.ref = "workManager" }

# Testing Libs Dependencies
assertK = { group = "com.willowtreeapps.assertk", name = "assertk", version.ref = "assertK" }
appCash-turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "appCashTurbine" }
coroutinesTest = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines" }

# =================================================================================================

[plugins]

# Base Plugins
android-application = { id = "com.android.application", version.ref = "agp" }
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# Annotation / Symbol Proccessing Plugins
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# Serialization Plugins
jetbrains-kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# Dependency Injection
dagger-hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "daggerHilt" }